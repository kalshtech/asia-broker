import {ReactNode} from "react";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import {NextIntlClientProvider, hasLocale} from 'next-intl';
import Provider from "./Provider";
import {routing} from '@/i18n/routing';
import {notFound} from 'next/navigation';
import 'swiper/css';
import 'swiper/css/pagination';
import "@/app/globals.css";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type Props = {
    children: ReactNode;
    params: Promise<{locale: string}>;
};


export default async function RootLayout({children, params}: Props) {
    const {locale} = await params;
    if (!hasLocale(routing.locales, locale)) {
        notFound();
    }
  return (
      <html lang={locale} suppressHydrationWarning>
      <head>
          <meta name="viewport" content="width=device-width,initial-scale=1.0, user-scalable=no"/>
          <title></title>
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
          <NextIntlClientProvider>
              <Provider>
                  {children}
              </Provider>
          </NextIntlClientProvider>
      </body>
      </html>
  );
}
